<?xml version="1.0" encoding="UTF-8"?>
<!-- scan:当此属性设置为 true 时 配置文档如果发生改变 将会被重新加载 默认值为 true -->
<!-- scanPeriod:设置监测配置文档是否有修改的时间间隔 如果没有给出时间单位 默认单位是毫秒 当 scan 为 true 时 此属性生效 默认的时间间隔为 1 分钟 -->
<!-- debug:当此属性设置为 true 时 将打印出 logback 内部日志信息 实时查看 logback 运行状态 默认值为 false -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
  <!-- 日志存放路径 -->
  <property name="log.path" value="logs/ruoyi-auth"/>
  <!-- 日志输出格式 -->
  <property name="log.pattern"
            value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n"/>

  <!-- 系统日志输出 -->
  <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}/info.log</file>
    <!-- 循环政策：基于时间创建日志文件 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- 日志文件名格式 -->
      <fileNamePattern>${log.path}/info.%d{yyyy-MM-dd}.log</fileNamePattern>
      <!-- 日志最大的历史 60天 -->
      <maxHistory>60</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>${log.pattern}</pattern>
      <charset>UTF-8</charset>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!-- 过滤的级别 -->
      <level>INFO</level>
      <!-- 匹配时的操作：接收（记录） -->
      <onMatch>ACCEPT</onMatch>
      <!-- 不匹配时的操作：拒绝（不记录） -->
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>

  <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}/error.log</file>
    <!-- 循环政策：基于时间创建日志文件 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- 日志文件名格式 -->
      <fileNamePattern>${log.path}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
      <!-- 日志最大的历史 60天 -->
      <maxHistory>60</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>${log.pattern}</pattern>
      <charset>UTF-8</charset>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!-- 过滤的级别 -->
      <level>ERROR</level>
      <!-- 匹配时的操作：接收（记录） -->
      <onMatch>ACCEPT</onMatch>
      <!-- 不匹配时的操作：拒绝（不记录） -->
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>

  <!-- 系统模块日志级别控制  -->
  <logger name="com.ruoyi">
    <level value="INFO"/>
    <appender-ref ref="file_info"/>
    <appender-ref ref="file_error"/>
  </logger>
  <!-- Spring 日志级别控制 -->
  <logger name="org.springframework">
    <level value="WARN"/>
    <appender-ref ref="file_info"/>
    <appender-ref ref="file_error"/>
  </logger>

  <!--
  root 节点是必选节点 用来指定通用的日志输出级别 只有一个 level 属性
  level: 用来设置打印级别 大小写无关 TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF 不能设置为 INHERITED 或者同义词 NULL 默认是 DEBUG
  可以包含零个或多个元素 标识这个 appender 将会添加到这个 logger
  -->
  <!-- 系统操作日志 -->
  <!--  <root level="INFO">-->
  <!--    <appender-ref ref="file_info"/>-->
  <!--    <appender-ref ref="file_error"/>-->
  <!--  </root>-->

  <!-- 本地环境输出至控制台 -->
  <!-- 如果使用了 springProfile, 需要将logback.xml名称改为logback-spring.xml-->
  <springProfile name="prod">
    <root level="INFO">
      <appender-ref ref="file_info"/>
      <appender-ref ref="file_error"/>
    </root>
  </springProfile>
</configuration>